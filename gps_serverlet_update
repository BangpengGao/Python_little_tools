#! /usr/bin/env python
#-*- coding:utf-8 -*-

from email.mime.text import MIMEText
from urllib2 import Request,urlopen,URLError
import requests
import smtplib
import string
import os
import sys
import urllib
import datetime,time

def send_mail(mail_to, subject, msg):
    try:
        msg_fmt = MIMEText(msg, _subtype='plain', _charset='utf-8')
        msg_fmt['From'] = 'dd_ops@163.com'
        msg_fmt['Subject'] = subject
        mailto = string.split(mail_to, ',')
        msg_fmt['To'] = ','.join(mailto)

        s = smtplib.SMTP_SSL('smtp.163.com', 465)
        s.login('dd_ops@163.com', 'DiDiMorAlm123')
        s.sendmail(msg_fmt['From'], mailto, msg_fmt.as_string())
        s.close()

    except Exception, ex:
        send_mail_err(mail_to, subject, msg)


def send_mail_err(mail_to, subject, msg):
    subject = '由备用邮箱发送' + subject
    msg_fmt = MIMEText(msg, _subtype='plain', _charset='utf-8')
    msg_fmt['From'] = 'dd_ops_01@163.com'
    msg_fmt['Subject'] = subject
    mailto = string.split(mail_to, ',')
    msg_fmt['To'] = ','.join(mailto)

    s = smtplib.SMTP_SSL('smtp.163.com', 465)
    s.login('dd_ops_01@163.com', 'DiDiMorAlm123')
    s.sendmail(msg_fmt['From'], mailto, msg_fmt.as_string())
    s.close()

def modify_mysql1_properties(filepath):
    file = open(filepath)
    content = []
    for line in file:
        if line.__contains__("range"):
            now = datetime.datetime.now()
            if now.month < 4:
                content.append("srv.01.06.002.01.date.range=" + str(now.year - 1)\
                               + str(now.month + 12 - 3).zfill(2)+ "01000000,99999999999999"+"\n")
                continue
            else:
                content.append("srv.01.06.002.01.date.range=" + str(now.year)\
                               + str(now.month - 3).zfill(2)+ "01000000,99999999999999"+"\n")
                continue
        content.append(line)
    file.close()
    file = open(filepath, "w")
    for i in range(len(content)):
        file.write(content[i])
    file.close()

def modify_mysql0_properties(filepath):
    file = open(filepath)
    content = []
    for line in file:
        if line.__contains__("range"):
            now = datetime.datetime.now()
            if now.month < 4:
                content.append("srv.01.06.002.01.date.range=00000000000000," + str(now.year - 1)\
                               + str(now.month + 12 - 3).zfill(2)+ "01000000"+"\n")
                continue
            else:
                content.append("srv.01.06.002.01.date.range=00000000000000," + str(now.year)\
                               + str(now.month - 3).zfill(2)+ "01000000"+"\n")
                continue
        content.append(line)
    file.close()
    file = open(filepath, "w")
    for i in range(len(content)):
        file.write(content[i])
    file.close()

def modify_application_properties(filepath):
    file = open(filepath)
    content = []
    for line in file:
        if line.split("=")[0] == "srv.01.06.002.02.tracestore.bigdata[0]":
            now = datetime.datetime.now()
            if now.month < 4:
                content.append("srv.01.06.002.02.tracestore.bigdata[0]=20160801000000," + str(now.year - 1)\
                               + str(now.month + 12 - 3).zfill(2)+ "01000000,"+line.split(",")[-1])
                continue
            else:
                content.append("srv.01.06.002.02.tracestore.bigdata[0]=20160801000000," + str(now.year)\
                               + str(now.month - 3).zfill(2)+ "01000000,"+line.split(",")[-1])
                continue
        if line.split("=")[0] == "srv.01.06.002.02.tracestore.bigdata[1]":
            now = datetime.datetime.now()
            if now.month < 4:
                content.append("srv.01.06.002.02.tracestore.bigdata[1]=" + str(now.year - 1)\
                               + str(now.month + 12 - 3).zfill(2)+ "01000000,99999999999999,"+line.split(",")[-1])
                continue
            else:
                content.append("srv.01.06.002.02.tracestore.bigdata[1]=" + str(now.year)\
                               + str(now.month - 3).zfill(2)+ "01000000,99999999999999,"+line.split(",")[-1])
                continue
        content.append(line)
    file.close()
    file = open(filepath, "w")
    for i in range(len(content)):
        file.write(content[i])
    file.close()

def run_sh(cmd):
    if not os.system("sh " + cmd):
        return 1
    else:
        return 0

def run_all_sh(sh_set, mail_to):
    for i in range(len(sh_set)):
        print "execute " + sh_set[i]
        if not run_sh(sh_set[i]):
            #send_mail(mail_to, u"地理编码库", sh_set[i] + " failed!")
            break
        time.sleep(10)

def get_port(filepath):
    file = open(filepath)
    if filepath == "run.sh":
        for line in file:
            if line.__contains__("docker"):
                port = line.split(":12345")[0].split(" ")[-1]
                file.close()
                return port
    else:
        for line in file:
            if line.__contains__("run.sh"):
                port = line.split("\n")[0].split(" ")[-1]
                file.close()
                return port
    return null

def get_url_status(url):
    try:
        #req = urllib.urlopen(url).status_code
        return requests.get(url).status_code
    except URLError as e:
        return e

def timing_task(sh_set01, sh_set02, mail_to, filepath01, filepath02, filename0, filename1, filename2, url):
    last = 0
    while True:
        now = datetime.datetime.now()
        if now.day == 1 and now.month != last:#每月1号定时任务
            last = now.month
            os.chdir(filepath01)#更改python工作目录
            modify_mysql0_properties(filename0)
            modify_mysql1_properties(filename1)
            run_all_sh(sh_set01, mail_to)
            time.sleep(3)
            content = "content:" + "\n" + u"轨迹微服务的查询日期修改为："
            if now.month < 4:
                content = content + str(now.year - 1) + str(now.month + 12 - 3).zfill(2) + "01000000" + "\n"
            else:
                content = content + str(now.year) + str(now.month - 3).zfill(2) + "01000000" + "\n"

            #print "************" + get_port(sh_set01[-2])
            status = get_url_status(url + get_port(sh_set01[-2]) + "/info")
            if status == 200:
                content = content + sh_set01[-2] + " result->" + "docker is deployed successfully! " + "\n"
            else:
                content = content + sh_set01[-2] + " result->" + "docker is failed and status is" + str(status) + "\n"
            #time.sleep(10)
            #print "************" + get_port(sh_set01[-1])
            status = get_url_status(url + get_port(sh_set01[-1]) + "/info")
            if status == 200:
                content = content + sh_set01[-1] + " result->" + "docker is deployed successfully! " + "\n"
            else:
                content = content + sh_set01[-1] + " result->" + "docker is failed and status is" + str(status) + "\n"

            os.chdir(filepath02)#更改python工作目录
            modify_application_properties(filename2)
            run_all_sh(sh_set02, mail_to)
            #print "************" + get_port(sh_set02[-1])
            time.sleep(3)
            status = get_url_status(url + get_port(sh_set02[-1]) + "/info")
            if status == 200:
                content = content + sh_set02[-1] + " result->" + "docker is deployed successfully! " + "\n"
            else:
                content = content + sh_set02[-1] + " result->" + "docker is failed and status is" + str(status) + "\n"

            send_mail(mail_to, u"轨迹微服务", content)
            time.sleep(20*24*60*60)#睡眠24*20个小时，防止多次运行

if __name__ == '__main__':
    filepath01 = ""
    filepath02 = ""
    filename0 = "application-mysql0.properties"
    filename1 = "application-mysql1.properties"
    filename2 = "application.properties"
    url = "http://118.190.118.77:"
    sh_set01 = ["rm.sh",
                "rmi.sh",
                "build.sh",
                "run0.sh",
                "run1.sh"]
    
    sh_set02 = ["rm.sh",
                "rmi.sh",
                "build.sh",
                "run.sh"]
    mail_to = ""
    timing_task(sh_set01, sh_set02, mail_to, filepath01, filepath02, filename0, filename1, filename2, url)
